#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void analizaTrama(unsigned char T[]);

void analizaLLC(unsigned char T[]);
void imprimeTI(unsigned char T[]);
void imprimeTS(unsigned char T[]);
void imprimeTU(unsigned char T[]);

void analizaARP(unsigned char T[]);

void analizaIP(unsigned char T[]);
void ICMP(unsigned char T[]);
void TCP(unsigned char T[]);
void UDP(unsigned char T[]);

int PoF(unsigned char T[]);

void checksum(unsigned char T[]);

void main(int argc, char const *argv[]){

//Tramas nidia Archivo
/*
	unsigned char T[][200]={{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x03,0xf0,0xf0,
							0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			 				0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
			 				0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x43,0x05,0x90,0x6d}, //trama1

			 				{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x03,0xf0,0xf1,
							 0x73,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x54,0x90,0x6d}, //trama2

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x04,0xf0,0xf0,
							 0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x41,0xa3,0x90,0x6d}, //trama3

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x04,0xf0,0xf1,
							 0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf2,0x90,0x6d}, //trama4

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x12,0xf0,0xf0,
							 0x00,0x01,0x0e,0x00,0xff,0xef,0x19,0x8f,0xbc,0x05,0x7f,0x00,0x23,0x00,0x7f,0x23,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x41,0x91,0x6d}, //trama5

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x12,0xf0,0xf0,
							 0x00,0x03,0x0e,0x00,0xff,0xef,0x17,0x81,0xbc,0x05,0x23,0x00,0x7f,0x00,0x23,0x7f,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x90,0x91,0x6d}, //trama6

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x04,0xf0,0xf1,
							 0x01,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdf,0x91,0x6d}, //trama7

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x04,0xf0,0xf1,
							 0x01,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0xac,0x92,0x6d}, //trama8

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0xac,0xf0,0xf0,
							 0x02,0x02,0x0e,0x00,0xff,0xef,0x16,0x04,0x00,0x00,0x00,0x00,0x28,0x00,0x7f,0x23,
							 0xff,0x53,0x4d,0x42,0x72,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x82,0x09,
							 0x00,0x77,0x00,0x02,0x50,0x43,0x20,0x4e,0x45,0x54,0x57,0x4f,0x52,0x4b,0x20,0x50,
							 0x52,0x4f,0x47,0x52,0x41,0x4d,0x20,0x31,0x2e,0x30,0x00,0x02,0x4d,0x49,0x43,0x52,
							 0x4f,0x53,0x4f,0x46,0x54,0x20,0x4e,0x45,0x54,0x57,0x4f,0x52,0x4b,0x53,0x20,0x33,
							 0x2e,0x30,0x00,0x02,0x44,0x4f,0x53,0x20,0x4c,0x4d,0x31,0x2e,0x32,0x58,0x30,0x30,
							 0x32,0x00,0x02,0x44,0x4f,0x53,0x20,0x4c,0x41,0x4e,0x4d,0x41,0x4e,0x32,0x2e,0x31,
							 0x00,0x02,0x57,0x69,0x6e,0x64,0x6f,0x77,0x73,0x20,0x66,0x6f,0x72,0x20,0x57,0x6f,
							 0x72,0x6b,0x67,0x72,0x6f,0x75,0x70,0x73,0x20,0x33,0x2e,0x31,0x61,0x00,0x02,0x4e,
							 0x54,0x20,0x4c,0x4d,0x20,0x30,0x2e,0x31,0x32,0x00,0x00,0xfb,0x92,0x6d,0x86,0xdf}, //trama9

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x04,0xf0,0xf1,
							 0x01,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7b,0x93,0x6d}, //trama10

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x5f,0xf0,0xf0,
							 0x02,0x04,0x0e,0x00,0xff,0xef,0x16,0x0c,0x00,0x00,0x28,0x00,0x28,0x00,0x23,0x7f,
							 0xff,0x53,0x4d,0x42,0x72,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x82,0x09,
							 0x11,0x05,0x00,0x02,0x02,0x00,0x01,0x00,0x68,0x0b,0x00,0x00,0x00,0x00,0x01,0x00,
							 0x7f,0x07,0x00,0x80,0x03,0x02,0x00,0x00,0x00,0xe5,0xfe,0x29,0x25,0x7c,0xc2,0x01,
							 0x2c,0x01,0x08,0x08,0x00,0x7f,0x07,0x00,0x80,0x32,0x3e,0xb9,0x3d,0x00,0xca,0x93}, //trama11

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x04,0xf0,0xf1,
							 0x01,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0x94,0x6d}, //trama12

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x91,0xf0,0xf0,
							 0x04,0x04,0x0e,0x00,0xff,0xef,0x16,0x0c,0x00,0x00,0x28,0x00,0x28,0x00,0x7f,0x23,
							 0xff,0x53,0x4d,0x42,0x73,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x82,0x09,
							 0x0d,0x75,0x00,0x5d,0x00,0x68,0x0b,0x02,0x00,0x00,0x00,0x7f,0x07,0x00,0x80,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x45,
							 0x53,0x43,0x4f,0x4d,0x00,0x57,0x69,0x6e,0x64,0x6f,0x77,0x73,0x20,0x34,0x2e,0x30,
							 0x00,0x57,0x69,0x6e,0x64,0x6f,0x77,0x73,0x20,0x34,0x2e,0x30,0x00,0x04,0xff,0x00,
							 0x00,0x00,0x02,0x00,0x02,0x00,0x17,0x00,0x20,0x00,0x5c,0x5c,0x50,0x52,0x4f,0x47,
							 0x59,0x44,0x45,0x53,0x41,0x5c,0x49,0x50,0x43,0x24,0x00,0x49,0x50,0x43,0x00,0x00}, //trama13

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x04,0xf0,0xf1,
							 0x01,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x95,0x6d}, //trama14

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x46,0xf0,0xf0,
							 0x04,0x06,0x0e,0x00,0xff,0xef,0x16,0x0c,0x00,0x00,0x28,0x00,0x28,0x00,0x23,0x7f,
							 0xff,0x53,0x4d,0x42,0x73,0x00,0x00,0x00,0x00,0x90,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xc0,0x00,0x00,0x00,0x00,0x82,0x09,
							 0x03,0x75,0x00,0x29,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x00,0x00,0x00,0x04,0x00,
							 0x49,0x50,0x43,0x00,0x00,0x81,0x95,0x6d,0x86,0xcb,0x94,0x6d,0x86,0x0d,0x09,0x0e}, //trama15

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x04,0xf0,0xf1,
							 0x01,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x96,0x6d}, //trama16

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x7e,0xf0,0xf0,
							 0x06,0x06,0x0e,0x00,0xff,0xef,0x16,0x0c,0x00,0x00,0x28,0x00,0x28,0x00,0x7f,0x23,
							 0xff,0x53,0x4d,0x42,0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xc0,0x00,0x00,0x00,0x00,0x82,0x0a,
							 0x0e,0x20,0x00,0x00,0x00,0x08,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x88,0x13,0x00,
							 0x00,0x00,0x00,0x20,0x00,0x4c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x00,0x5c,
							 0x50,0x49,0x50,0x45,0x5c,0x4c,0x41,0x4e,0x4d,0x41,0x4e,0x00,0x68,0x00,0x57,0x72,
							 0x4c,0x65,0x68,0x44,0x7a,0x00,0x42,0x31,0x36,0x42,0x42,0x44,0x7a,0x00,0x01,0x00,
							 0x00,0x10,0xff,0xff,0xff,0xff,0x45,0x53,0x43,0x4f,0x4d,0x00,0x00,0x6f,0x96,0x6d}, //trama17

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x04,0xf0,0xf1,
							 0x01,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xbe,0x96,0x6d}, //trama18

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x04,0xf0,0xf1,
							 0x01,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5d,0x97,0x6d}, //trama19

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x7e,0xf0,0xf0,
							 0x08,0x08,0x0e,0x00,0xff,0xef,0x16,0x0c,0x00,0x00,0x28,0x00,0x28,0x00,0x7f,0x23,
							 0xff,0x53,0x4d,0x42,0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xc0,0x00,0x00,0x00,0x00,0x02,0x0b,
							 0x0e,0x20,0x00,0x00,0x00,0x08,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x88,0x13,0x00,
							 0x00,0x00,0x00,0x20,0x00,0x4c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x00,0x5c,
							 0x50,0x49,0x50,0x45,0x5c,0x4c,0x41,0x4e,0x4d,0x41,0x4e,0x00,0x68,0x00,0x57,0x72,
							 0x4c,0x65,0x68,0x44,0x7a,0x00,0x42,0x31,0x36,0x42,0x42,0x44,0x7a,0x00,0x01,0x00,
							 0x00,0x10,0x00,0x00,0x00,0x80,0x45,0x53,0x43,0x4f,0x4d,0x00,0x00,0xac,0x97,0x6d}, //trama20

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x04,0xf0,0xf1,
							 0x01,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfb,0x97,0x6d}, //trama21

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x04,0xf0,0xf1,
							 0x01,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4a,0x98,0x6d}, //trama22

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x12,0xf0,0xf0,
							 0x0a,0x0b,0x0e,0x00,0xff,0xef,0x14,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x7f,0x23,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x99,0x98,0x6d}, //trama23

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x04,0xf0,0xf1,
							 0x01,0x0d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x45,0x99,0x6d}, //trama24

							{0x03,0x00,0x00,0x00,0x00,0x01,0x00,0x04,0xac,0x44,0x4d,0x02,0x00,0x8b,0xf0,0xf0,
							 0x03,0x2c,0x00,0xff,0xef,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x42,0x34,0x20,
							 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1b,0x49,0x42,0x4d,
							 0x53,0x45,0x52,0x56,0x45,0x52,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0xff,0x53,0x4d,
							 0x42,0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,
							 0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe8,0x03,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x06,0x00,0x56,0x00,0x03,0x00,0x01,0x00,0x01,0x00,0x02,0x00,
							 0x17,0x00,0x5c,0x4d,0x41,0x49,0x4c,0x53,0x4c,0x4f,0x54,0x5c,0x42,0x52,0x4f,0x57,
							 0x53,0x45,0x00,0x09,0x04,0x33,0x17,0x00,0x00,0x00,0x9b,0x99,0x6d,0x86,0x99,0x98}, //trama25

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x35,0xf0,0xf0,
							 0x0c,0x0a,0x0e,0x00,0xff,0xef,0x16,0x04,0x00,0x00,0x00,0x00,0x28,0x00,0x7f,0x23,
							 0xff,0x53,0x4d,0x42,0x71,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xc0,0x00,0x00,0x00,0x00,0x01,0x50,
							 0x00,0x00,0x00,0x45,0xf1,0x99,0x6d,0x86,0x45,0x99,0x6d,0x86,0x1f,0x09,0x52,0x5b}, //trama26

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x35,0xf0,0xf0,
							 0x0a,0x0e,0x0e,0x00,0xff,0xef,0x16,0x0c,0x00,0x00,0x28,0x00,0x28,0x00,0x23,0x7f,
							 0xff,0x53,0x4d,0x42,0x71,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xc0,0x00,0x00,0x00,0x00,0x01,0x50,
							 0x00,0x00,0x00,0x00,0x40,0x9a,0x6d,0x86,0x9b,0x99,0x6d,0x86,0x20,0x09,0x75,0x5b}, //trama27

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x12,0xf0,0xf0,
							 0x0e,0x0d,0x0e,0x00,0xff,0xef,0x14,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x7f,0x23,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8f,0x9a,0x6d}, //trama28

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x04,0xf0,0xf1,
							 0x01,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xde,0x9a,0x6d}, //trama29

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x12,0xf0,0xf0,
							 0x10,0x0d,0x0e,0x00,0xff,0xef,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x23,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x9b,0x6d}, //trama30

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x04,0xf0,0xf1,
							 0x01,0x13,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0x9b,0x6d}, //trama31

							{0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x03,0xf0,0xf0,
							 0x53,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xcb,0x9b,0x6d}, //trama32

							{0x00,0x02,0xb3,0x9c,0xdf,0x1b,0x00,0x02,0xb3,0x9c,0xae,0xba,0x00,0x03,0xf0,0xf1,
							 0x73,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x77,0x9c,0x6d},
							 
							{0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x23,0x8b,0x46,0xe9,0xad,0x08,0x06,0x00,0x04, 
							 0x08,0x00,0x06,0x04,0x00,0x01,0x00,0x23,0x8b,0x46,0xe9,0xad,0x94,0xcc,0x39,0xcb, 
							 0x00,0x00,0x00,0x00,0x00,0x00,0x94,0xcc,0x39,0xfe },						   		//Trama a

							{0x00,0x23,0x8b,0x46,0xe9,0xad,0x00,0x1f,0x45,0x9d,0x1e,0xa2,0x08,0x06,0x00,0x01,  	//TRAMA b
							 0x08,0x00,0x06,0x04,0x00,0x02,0x00,0x1f,0x45,0x9d,0x1e,0xa2,0x94,0xcc,0x39,0xfe,
							 0x00,0x23,0x8b,0x46,0xe9,0xad,0x94,0xcc,0x39,0xcb,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 },
							
							{0x00,0x1f,0x45,0x9d,0x1e,0xa2,0x00,0x23,0x8b,0x46,0xe9,0xad,0x08,0x00,0x46,0x00, 	// TRAMA c
							 0x80,0x42,0x04,0x55,0x34,0x11,0x80,0x11,0x6b,0xf0,0x94,0xcc,0x39,0xcb,0x94,0xcc, 
							 0x67,0x02,0xaa,0xbb,0xcc,0xdd,0x04,0x0c,0x00,0x35,0x00,0x2e,0x85,0x7c,0xe2,0x1a,
							 0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x77,0x77,0x77,0x03,0x69,
							 0x73,0x63,0x05,0x65,0x73,0x63,0x6f,0x6d,0x03,0x69,0x70,0x6e,0x02,0x6d,0x78,0x00,
							 0x00,0x1c,0x00,0x01}
						};
*/

//Tramas Reporte ARP
/*
	unsigned char T[][200]={{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE8,0x4E,0x06,0x0C,0xF7,0x17,0x08,0x06,0x00,0x01, //Inventadas
							 0x08,0x00,0x06,0x04,0x00,0x01,0xE8,0x4E,0x06,0x0C,0xF7,0x17,0x14,0x00,0x00,0x01,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x1D,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

			 				{0x29,0x29,0x29,0x29,0x29,0x29,0x78,0x84,0x3C,0x39,0x98,0x81,0x08,0x06,0x00,0x01, //Inventadas
							 0x08,0x00,0x06,0x04,0x00,0x02,0x78,0x84,0x3C,0x39,0x98,0x81,0x1D,0x00,0x00,0x01,
							 0x29,0x29,0x29,0x29,0x29,0x29,0x1D,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

							{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x08,0x06,0x00,0x01, //en clase
							 0x08,0x00,0x06,0x04,0x00,0x01,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x01,0x00,0x00,0x01,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
							
							{0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x1A,0x1A,0x1A,0x1A,0x1A,0x1A,0x08,0x06,0x00,0x01, //en clase
							 0x08,0x00,0x06,0x04,0x00,0x02,0x1A,0x1A,0x1A,0x1A,0x1A,0x1A,0x01,0x00,0x00,0x02,
							 0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

							{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x08,0x06,0x00,0x01, //tramas clase P1S
							 0x08,0x00,0x06,0x04,0x00,0x01,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x01,0x00,0x00,0x01,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

			 				{0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x11,0x11,0x11,0x11,0x11,0x11,0x08,0x06,0x00,0x01, //tramas clase P1R
							 0x08,0x00,0x06,0x04,0x00,0x02,0x11,0x11,0x11,0x11,0x11,0x11,0x01,0x00,0x00,0xFE,
							 0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

							{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x22,0x22,0x22,0x22,0x22,0x22,0x08,0x06,0x00,0x01, //tramas clase P2S
							 0x08,0x00,0x06,0x04,0x00,0x01,0x22,0x22,0x22,0x22,0x22,0x22,0x02,0x00,0x00,0xFE,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
							
							{0x22,0x22,0x22,0x22,0x22,0x22,0x1B,0x1B,0x1B,0x1B,0x1B,0x1B,0x08,0x06,0x00,0x01, //tramas clase P2R
							 0x08,0x00,0x06,0x04,0x00,0x02,0x1B,0x1B,0x1B,0x1B,0x1B,0x1B,0x02,0x00,0x00,0x02,
							 0x22,0x22,0x22,0x22,0x22,0x22,0x02,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

							{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x08,0x06,0x00,0x01, //Ultimas 4 tramas del reporte
							 0x08,0x00,0x06,0x04,0x00,0x01,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x01,0x00,0x00,0x01,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

							{0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x11,0x11,0x11,0x11,0x11,0x11,0x08,0x06,0x00,0x01, //Ultimas 4 tramas del reporte
							 0x08,0x00,0x06,0x04,0x00,0x02,0x11,0x11,0x11,0x11,0x11,0x11,0x01,0x00,0x00,0x02,
							 0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

							{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x22,0x22,0x22,0x22,0x22,0x22,0x08,0x06,0x00,0x01, //Ultimas 4 tramas del reporte
							 0x08,0x00,0x06,0x04,0x00,0x01,0x22,0x22,0x22,0x22,0x22,0x22,0x02,0x00,0x00,0xFE,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

							{0x22,0x22,0x22,0x22,0x22,0x22,0x1A,0x1A,0x1A,0x1A,0x1A,0x1A,0x08,0x06,0x00,0x01, //Ultimas 4 tramas del reporte
							 0x08,0x00,0x06,0x04,0x00,0x02,0x1A,0x1A,0x1A,0x1A,0x1A,0x1A,0x02,0x00,0x00,0x01,
							 0x22,0x22,0x22,0x22,0x22,0x22,0x02,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,
							 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}
						};
*/
/*
	//Primera Trama TCP
	unsigned char T[] = {0x00,0x14,0xd1,0xc2,0x38,0xbe,0x00,0x18,0xe7,0x33,0x3d,0xc3,0x08,0x00,0x46,0x02,
						 0x00,0x30,0x94,0x71,0x40,0x00,0x80,0x06,0xf9,0x8c,0xc0,0xa8,0x02,0x3c,0x4a,0x7d,
						 0x5f,0x68,0x10,0x52,0x00,0x50,0x00,0x50,0x04,0x38,0x00,0x00,0x00,0x00,0x70,0x02,
						 0x40,0x00,0x1a,0x1a,0x00,0x00,0x02,0x04,0x05,0xb4,0x01,0x01,0x04,0x02};
*/
/*					 
	//Segunda Trama TCP
	unsigned char T[] = {0x00,0x1f,0x45,0x9d,0x1e,0xa2,0x00,0x23,0x8b,0x46,0xe9,0xad,0x08,0x00,0x45,0x08,
						 0x80,0x42,0x04,0x55,0x34,0x11,0x80,0x06,0x6b,0xf0,0x94,0xcc,0x39,0xcb,0x94,0xcc,
						 0x67,0x02,0x00,0x17,0x00,0x35,0x00,0x2e,0x85,0x7c,0x00,0x00,0x00,0x00,0x50,0x02,
						 0x40,0x00,0x1f,0x86,0x00,0x00};
*/
/*
	//Primera Trama UDP
	unsigned char T[] = {0x00,0x1f,0x45,0x9d,0x1e,0xa2,0x00,0x23,0x8b,0x46,0xe9,0xad,0x08,0x00,0x46,0x00,
						 0x80,0x42,0x04,0x55,0x34,0x11,0x80,0x11,0x6b,0xf0,0x94,0xcc,0x39,0xcb,0x94,0xcc,
						 0x67,0x02,0xaa,0xbb,0xcc,0xdd,0x00,0x07,0x00,0x35,0x00,0x2e,0x85,0x7c,0xe2,0x1a,
						 0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x77,0x77,0x77,0x03,0x69,
					     0x73,0x63,0x05,0x65,0x73,0x63,0x6f,0x6d,0x03,0x69,0x70,0x6e,0x02,0x6d,0x78,0x00,
						 0x00,0x1c,0x00,0x01};
*/
/*
	//Segunda Trama UDP
	unsigned char T[] = {0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x23,0x8b,0x46,0xe9,0xad,0x08,0x00,0x45,0x00, 
						 0x08,0x00,0x06,0x04,0x00,0x01,0x00,0x11,0x8b,0x46,0xe9,0xad,0x94,0xcc,0x39,0xcb,
						 0x00,0x00,0x00,0x45,0x00,0x07,0x00,0x08,0x39,0xfe};
*/
/*
	//Primera Trama ICMP
	unsigned char T [] = {0x00,0x01,0xf4,0x43,0xc9,0x19,0x00,0x50,0xba,0xb2,0xf3,0x7b,0x08,0x00,0x45,0x00,
						 0x00,0x3c,0x09,0x0d,0x00,0x00,0x80,0x01,0x7b,0xfe,0x94,0xcc,0x19,0x1b,0x94,0xcc,
						 0x73,0x02,0x08,0x00,0x58,0x5a,0x02,0x00,0xf3,0x01,0x61,0x62,0x63,0x64,0x65,0x66,
						 0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,
						 0x77,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69};
*/
	//Segunda Trama ICMP
	unsigned char T[] = {0x00,0x50,0xba,0xb2,0xf3,0x7b,0x00,0x01,0xf4,0x43,0xc9,0x19,0x08,0x00,0x45,0x00,
						 0x00,0x3c,0xdf,0x5c,0x00,0x00,0x7c,0x01,0xa9,0xae,0x94,0xcc,0x73,0x02,0x94,0xcc,
						 0x19,0x1b,0x00,0x00,0x60,0x5a,0x02,0x00,0xf3,0x01,0x61,0x62,0x63,0x64,0x65,0x66,
						 0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,
						 0x77,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69};

	

	printf("Alumnos: Mora Ayala Jose Antonio\n\t Torres Carrillo Josehf Miguel Angel\n\n");
	
	//for (unsigned char i = 8; i < 12; i++){

		//printf("====================Cabecera ETHERNET %d====================\n", i+1);
		printf("====================Cabecera ETHERNET ====================\n");
		analizaTrama(T);
	//}
}

void analizaTrama (unsigned char T[]){

	unsigned short int tot = T[12]<<8 | T[13];
		
	printf("MAC Destino: %.2x:%.2x:%.2x:%.2x:%.2x:%.2x:\n\n", T[0],T[1],T[2],T[3],T[4],T[5]);
	printf("MAC Origen: %.2x:%.2x:%.2x:%.2x:%.2x:%.2x:\n\n", T[6],T[7],T[8],T[9],T[10],T[11]);
		
	if (tot<1500){

		printf("======================Cabecera LLC==========================\n\n");
		printf("Tama%co de cabecera LLC: %d bytes\n\n", 164, tot);
		analizaLLC(T);
	}
	else if (tot == 2048){

		printf("======================Cabecera IP==========================\n");
		analizaIP(T);

	}
	else if (tot == 2054){

		printf("======================Cabecera ARP==========================\n\n");
		analizaARP(T);
	}
	else{

		printf("OTRO TIPO \n");
	}

	printf("\n\n");
}

void analizaLLC (unsigned char T[]){

	switch (T[16]&3){

		case 0:
			imprimeTI(T);
		break;

		case 1:
			imprimeTS(T);
		break;

		case 2:
			imprimeTI(T);
		break;

		case 3:
			imprimeTU(T);
		break;

		default:
			printf("ERROR\n");
	}
}

void imprimeTI (unsigned char T[]){

	printf("T- I, N(s)=%d, N(r)=%d", T[16]>>1, T[17]>>1);		

	PoF(T);
}

void imprimeTS (unsigned char T[]){

	char ss[][4] = {"RR","RNR","REJ","SREJ"};

	printf("T-S %s", ss[(T[16]>>2)&3]);

	PoF(T);
}

void imprimeTU (unsigned char T[]){

	char uc[][6]={"UI","SIM","-","SARM","UP","-","-","SABM",
				  "DISC","-","-","SARME","-","-","-","SAMBE",
				  "SNRM","-","-","RSET","-","-","-","XID","-",
				  "-","-","SRME","-","-","-","-"};

    char ur[][6]={"UI","RIM","-","DM","-","-","-","-","RD","-",
    			  "-","-","UA","-","-","-","-","FRMR","-","-",
    			  "-","-","-","XID","-","-","-","-","-","-","-","-"};
   
	printf("T-U");

	if (T[16] & 16){

        if (T[15] & 1)
        	printf(" -F %s", ur[((T[16]>>2)&3) | ((T[16]>>3)&28)]);
        else 
        	printf(" -P, %s",uc[((T[16]>>2)&3) | ((T[16]>>3)&28)]);
    }
}

int PoF(unsigned char T[]){

	if (T[17] & 1){

		if (T[15]&1)
			printf(" -F");		
		else
			printf(" -P");
	}
}

void analizaARP (unsigned char T[]){

	if (T[15]&1) printf("Ethernet ");
	else if (T[15]&6) printf("IEEE 802 ");
	else if (T[15]&15) printf("Frame Relay ");
	else if (T[15]&20) printf("ATM ");
	else printf("Otro ");

	if (T[16]== 8 && T[17] == 0) printf("0x08 0x00 ");
	else printf("Otro ");

	if (T[18]== 6 && T[19] == 4) printf("0x06 0x04 ");
	else printf("Otro ");

	if (T[21]&1) printf("ARP REQUEST\n\n");
	else if (T[21]&2) printf("ARP REPLY\n\n");
	else if (T[21]&3 || T[21]&8) printf("INVERSE ARP REQUEST\n\n");
	else if (T[21]&4 || T[21]&9) printf("INVERSE ARP REPLY\n\n");
	else printf("0x%.2x\n\n", T[21]);

	printf("MAC Origen: %.2x:%.2x:%.2x:%.2x:%.2x:%.2x\n\n", T[22],T[23],T[24],T[25],T[26],T[27]);
	printf("IP Origen: %d.%d.%d.%d\n\n", T[28],T[29],T[30],T[31]);

	printf("MAC Destino: %.2x:%.2x:%.2x:%.2x:%.2x:%.2x\n\n", T[32],T[33],T[34],T[35],T[36],T[37]);
	printf("IP Destino: %d.%d.%d.%d", T[38],T[39],T[40],T[41]);
}

void analizaIP(unsigned char T[]){

	unsigned char IHL = (T[14]&15)*4;

	if (T[15]&2) printf("Servicio: Costo minimo\n");
	else if (T[15]&4) printf("Servicio: Fiabilidad Maxima\n");
	else if (T[15]&8) printf("Servicio: Maximo Rendimiento\n");
	else if (T[15]&16) printf("Servicio: Retardo Minimo\n");
	else printf("Servicio: OTRO\n");

	printf("Checksum %.2x\n", (T[24]<<8 | T[25]));

	printf("Direccion IP Origen: %d %d %d %d\n", T[26], T[27], T[28], T[29]);
	printf("Direccion IP Destino: %d %d %d %d\n", T[30], T[31], T[32], T[33]);

	if (IHL > 20){

		printf("Tamano de Opciones %d bytes\n", IHL - 20);
		
		for (unsigned char i = 34; i <= (14 + IHL -1); i++)
				printf("0x%.2x ", T[i]);
	}
	else{

		printf("No tiene Opciones");
	}

	printf("\n");

	if (T[23] == 1) ICMP(T);
	else if (T[23] == 6) TCP(T);
	else if (T[23] == 17) UDP(T);
	else printf("OTRO\n");
}

void ICMP(unsigned char T[]){

	printf("====================Protocolo ICMP======================\n");

	unsigned char IHL = (T[14]&15)*4;

	if ((T[IHL+14] == 8) && (T[IHL+15] == 0)){

		printf("Solicitud ECHO\n");
	}

	if ((T[IHL+14] == 0) && (T[IHL+15] == 0)){

		printf("Respuesta ECHO\n");
	}

	printf("Checksum: %.2x\n", (T[IHL+16]<<8 | T[IHL+17]));

	printf("Identificador: %.2x\n", (T[IHL+18]<<8 | T[IHL+19]));

	printf("Numero de Secuencia: %d\n", (T[IHL+20]<<8 | T[IHL+21]));

	printf("Datos Opcionales: ");
	for (unsigned char i = IHL+22; i < IHL+54; i++)
		printf("%c", T[i]);
}

void TCP(unsigned char T[]){

	printf("====================Protocolo TCP======================\n");

	unsigned char IHL = (T[14]&15)*4;

	printf("Puerto Origen %d\n", (T[IHL+14]<<8 | T[IHL+15]));

	printf("Puerto de Destino %d\n", (T[IHL+16]<<8 | T[IHL+17]));

	checksum(T);

	unsigned char offset = ((T[14+IHL+12]>>4)&15)*4;

	if (offset < 20)
	{
		printf("Opciones %.2x\n", (T[IHL+34]<<24 | T[IHL+35]<<16 | T[IHL+36]<<8 | T[IHL+37]));
	}else{

		printf("Sin Opciones\n");
	}
}

void UDP(unsigned char T[]){

	printf("====================Protocolo UDP======================\n");

	unsigned char IHL = (T[14]&15)*4;

	printf("Puerto Origen %d\n", (T[IHL+14]<<8 | T[IHL+15]));

	printf("Puerto de Destino %d\n", (T[IHL+16]<<8 | T[IHL+17]));

	printf("Longitud %d\n", (T[IHL+18]<<8 | T[IHL+19]));

	printf("Checksum %.2x\n", (T[IHL+20]<<8 | T[IHL+21]));
	
}

void checksum(unsigned char T[]){

	//INICIO CONSTRUCCION PSEUDOCABECERA
	unsigned char IHL = (T[14]&15)*4;
	unsigned char offset = ((T[14+IHL+12]>>4)&15)*4;

	unsigned char auxiliar[12+offset];

	auxiliar[0] = T[26];
	auxiliar[1] = T[27];
	auxiliar[2] = T[28];
	auxiliar[3] = T[29];
	auxiliar[4] = T[30];
	auxiliar[5] = T[31];
	auxiliar[6] = T[32];
	auxiliar[7] = T[33];
	auxiliar[8] = 0x00;
	auxiliar[9] = T[23];
	auxiliar[10] = 0x00;
	auxiliar[11] = offset;

	for (unsigned char i = 0; i < offset ; i++)
		auxiliar[i+12] = T[14+IHL+i];
	//FIN CONSTRUCCION PSEUDOCABECERA

	unsigned int suma = 0x00, acarreo = 0x00;
    unsigned char i, tam;
    i = 0x00;
    tam = 12+offset;
    // Agarrando valores pares
    while (tam > 1)
    {
        acarreo = (((auxiliar[i] << 8) & 0xFF00) | ((auxiliar[i + 1]) & 0xFF));
        suma += acarreo;
        if ((suma & 0xFFFF0000) > 0)
        {
            suma = suma & 0xFFFF;
            suma += 1;
        }
        i += 2;
        tam -= 2;
    }
    suma = ~suma;    
    suma = suma & 0xFFFF;


    if (suma == 0)
    {
        printf("El checksum es correcto :)\n");
    }
    else
    {
    	printf("El checksum no es correcto :(\n");
        suma = 0x00, acarreo = 0x00;
        i = 0x00;
        tam = 12+offset;
        auxiliar[28] = 0;
        auxiliar[29] = 0;
        while (tam > 1)
        {
            acarreo = (((auxiliar[i] << 8) & 0xFF00) | ((auxiliar[i + 1]) & 0xFF));
            suma += acarreo;
            if ((suma & 0xFFFF0000) > 0)
            {
                suma = suma & 0xFFFF;
                suma += 1;
            }
            i += 2;
            tam -= 2;
        }

        suma = ~suma;
        suma = suma & 0xFFFF;
        printf("El checksum correcto es: 0x%.4x\n", suma);
    }
}